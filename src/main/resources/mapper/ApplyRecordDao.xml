<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.cms.dao.ApplyRecordDao">

	<sql id="base_column" >
			applyRecord.`id`, 			applyRecord.`apply_id`, applyRecord.`openid`  	</sql>

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.cms.entity.ApplyRecordEntity" id="applyRecordMap">
        <result property="id" column="id"/>
        <result property="applyId" column="apply_id"/>
        <result property="openid" column="openid"/>
    </resultMap>

	<select id="queryObject" resultType="io.renren.cms.entity.ApplyRecordEntity">
		select * from tb_apply_record where id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.cms.entity.ApplyRecordEntity">
		select * from tb_apply_record where 1 = 1
		
			<if test="applyId != null and applyId != ''"> and `apply_id` = #{applyId}</if>
			<if test="openid != null and openid != ''"> and `openid` = #{openid}</if>
		
		<if test="sdate != null and sdate != '' and edate != null and edate != ''">
			and (ctime between CONCAT(#{sdate},' 00:00:00') and CONCAT(#{edate},' 23:59:59'))
		</if>
		
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(id) from tb_apply_record where 1 = 1
			<if test="applyId != null and applyId != ''"> and `apply_id` = #{applyId}</if>
			<if test="openid != null and openid != ''"> and `openid` = #{openid}</if>

		<if test="sdate != null and sdate != '' and edate != null and edate != ''">
			and (ctime between CONCAT(#{sdate},' 00:00:00') and CONCAT(#{edate},' 23:59:59'))
		</if>
	</select>
	 
	<insert id="save" parameterType="io.renren.cms.entity.ApplyRecordEntity">
		insert into tb_apply_record
		(
			`id`, 
			`apply_id`, 
			`openid`,
			`ctime`,
			`member_id`,
			`verify_status`
		)
		values
		(
			#{id}, 
			#{applyId}, 
			#{openid},
			#{ctime},
			#{memberId},
			#{verifyStatus}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.cms.entity.ApplyRecordEntity">
		update tb_apply_record 
		<set>
			<if test="applyId != null">`apply_id` = #{applyId}, </if>
			<if test="openid != null">`openid` = #{openid}</if>
		</set>
		where id = #{id}
	</update>
	
	<!-- 	物理删除 -->
	<delete id="delete">
		delete from tb_apply_record where id = #{value}
	</delete>
	
	<!-- 	批量物理删除 -->
	<delete id="deleteBatch">
		delete from tb_apply_record where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	<!-- 	逻辑删除 -->
	<update id="logicDel">
		update tb_apply_record set is_del = 't' where id = #{value}
	</update>
	
	<!-- 	批量逻辑删除 -->
	<update id="logicDelBatch">
		update  tb_apply_record
		set is_del = 't'
		where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

	<select id="queryPortrait" resultType="io.renren.api.dto.ApplyRecordEntiyDto">
		select tar.*,tm.portrait,tm.nickname as nickName,tm.show_vip as showVip,tar.ctime as joinDate from tb_apply_record tar
		LEFT JOIN tb_member tm
		on tm.openid = tar.openid
		where 1 = 1
		<if test="applyId != null">and tar.`apply_id` = #{applyId}</if>
		group by tar.ctime desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<delete id="deleteByOpenIdAndApplyId">
		delete from tb_apply_record where 1=1
		<if test="applyId != null">and apply_id = #{applyId}</if>
		<if test="openid != null">and openid = #{openid}</if>
	</delete>


	<select id="queryVerifyMember" resultType="io.renren.api.dto.VerifyMemberInfoDto">
	SELECT
		ta.*,
		tm.portrait,
		tm.nickname AS nickName,
		tm.show_vip AS showVip,
		tm.id AS memberId,
		tm.code AS code
		FROM
		`tb_apply_record` tar
		LEFT JOIN tb_member tm ON tar.openid = tm.openid
		LEFT JOIN tb_apply ta ON ta.id = tar.apply_id
		WHERE
		1 = 1
		AND tar.verify_status ='f'
		AND tm.code = #{code}
		GROUP BY
		ta.start_time ASC
	</select>


</mapper>