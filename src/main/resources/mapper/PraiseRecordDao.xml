<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.cms.dao.PraiseRecordDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.cms.entity.PraiseRecordEntity" id="praiseRecordMap">
        <result property="id" column="id"/>
        <result property="templateId" column="template_id"/>
        <result property="openId" column="open_id"/>
        <result property="praiseStatus" column="praise_status"/>
        <result property="createTime" column="create_time"/>
        <result property="nickName" column="nickName"/>
        <result property="avatarUrl" column="avatarUrl"/>
    </resultMap>

	<select id="queryObjectByMap" resultType="io.renren.cms.entity.PraiseRecordEntity">
		select * from tb_praise_record where open_id = #{openId} and template_id=#{templateId}
	</select>
	<select id="queryObject" resultType="io.renren.cms.entity.PraiseRecordEntity">
		select * from tb_praise_record where id = #{value}
	</select>
	
	<select id="queryList" resultType="io.renren.cms.entity.PraiseRecordEntity">
		select * from tb_praise_record
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="queryPraiseList" resultType="io.renren.cms.entity.PraiseRecordEntity">
		select t1.*,t2.nick_name nickName,t2.avatar_url avatarUrl from tb_praise_record t1
			left join tb_wx_user t2 on t1.open_id=t2.open_id where praise_status='praise'
			
			<if test="createTime != null and createTime.trim() != ''">
				and t1.create_time&gt;=CONCAT(#{createTime},' 00:00:00')
			</if>
			<if test="templateId != null">
				and t1.template_id=#{templateId}
			</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by t1.create_time desc
			</otherwise>
        </choose>
        <if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from tb_praise_record 
	</select>
	 
	<insert id="save" parameterType="io.renren.cms.entity.PraiseRecordEntity" useGeneratedKeys="true" keyProperty="id">
		insert into tb_praise_record
		(
			`template_id`, 
			`open_id`, 
			`praise_status`, 
			`create_time`
		)
		values
		(
			#{templateId}, 
			#{openId}, 
			#{praiseStatus}, 
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.cms.entity.PraiseRecordEntity">
		update tb_praise_record 
		<set>
			<if test="templateId != null">`template_id` = #{templateId}, </if>
			<if test="openId != null">`open_id` = #{openId}, </if>
			<if test="openId != null">`praise_status` = #{praiseStatus}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<update id="changePraiseStatus" parameterType="io.renren.cms.entity.PraiseRecordEntity">
		update tb_praise_record set praise_status=#{praiseStatus} where open_id=#{openId} and template_id=#{templateId}
	</update>
	
	<delete id="delete">
		delete from tb_praise_record where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from tb_praise_record where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>