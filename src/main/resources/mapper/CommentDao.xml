<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.cms.dao.CommentDao">

	<sql id="base_column" >
			comment.`id`, 			comment.`information_id`, 			comment.`remark`, 			comment.`create_time`, 			comment.`openid`  	</sql>

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.cms.entity.CommentEntity" id="commentMap">
        <result property="id" column="id"/>
        <result property="informationId" column="information_id"/>
        <result property="remark" column="remark"/>
        <result property="ctime" column="create_time"/>
        <result property="openid" column="openid"/>
    </resultMap>

	<select id="queryObject" resultType="io.renren.cms.entity.CommentEntity">
		select * from tb_comment where id = #{value}
	</select>
	<select id="queryList" resultType="io.renren.cms.entity.CommentEntity">
		select * from tb_comment where 1 = 1

		<if test="dataId != null and dataId != ''"> and `data_id` = #{dataId}</if>
		<if test="remark != null and remark != ''"> and `remark` = #{remark}</if>
		<if test="openId != null and openId != ''"> and `openid` = #{openId}</if>

		<if test="sdate != null and sdate != '' and edate != null and edate != ''">
			and (ctime between CONCAT(#{sdate},' 00:00:00') and CONCAT(#{edate},' 23:59:59'))
		</if>

		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<select id="queryListDto" resultType="io.renren.api.dto.CommentEntityDto">
		select tc.*,tm.portrait,tm.nickName,tm.show_vip as showVip,tm.type,tl.total as likeTotal from tb_comment tc
		left join tb_member tm
		on tc.openid = tm.openid
		left join (SELECT openid,count(id)total FROM tb_like where like_type =2) tl
		on tl.openid = tm.openid
		where 1 = 1
			<if test="informationId != null and informationId != ''"> and tc.`information_id` = #{informationId}</if>
			<if test="remark != null and remark != ''"> and tc.`remark` = #{remark}</if>
			<if test="openid != null and openid != ''"> and tc.`openid` = #{openid}</if>
		
		<if test="sdate != null and sdate != '' and edate != null and edate != ''">
			and (tc.ctime between CONCAT(#{sdate},' 00:00:00') and CONCAT(#{edate},' 23:59:59'))
		</if>
		
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by tc.ctime desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(id) from tb_comment where 1 = 1
			<if test="informationId != null and informationId != ''"> and `information_id` = #{informationId}</if>
			<if test="remark != null and remark != ''"> and `remark` = #{remark}</if>
			<if test="ctime != null and ctime != ''"> and `create_time` = #{ctime}</if>
			<if test="openid != null and openid != ''"> and `openid` = #{openid}</if>

		<if test="sdate != null and sdate != '' and edate != null and edate != ''">
			and (ctime between CONCAT(#{sdate},' 00:00:00') and CONCAT(#{edate},' 23:59:59'))
		</if>
	</select>
	 
	<insert id="save" parameterType="io.renren.cms.entity.CommentEntity">
		insert into tb_comment
		(
			`id`, 
			`information_id`, 
			`remark`, 
			`ctime`,
			`openid`
		)
		values
		(
			#{id}, 
			#{informationId}, 
			#{remark}, 
			#{ctime}, 
			#{openid}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.cms.entity.CommentEntity">
		update tb_comment 
		<set>
			<if test="informationId != null">`information_id` = #{informationId}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="ctime != null">`create_time` = #{ctime}, </if>
			<if test="openid != null">`openid` = #{openid}</if>
		</set>
		where id = #{id}
	</update>
	
	<!-- 	物理删除 -->
	<delete id="delete">
		delete from tb_comment where id = #{value}
	</delete>
	
	<!-- 	批量物理删除 -->
	<delete id="deleteBatch">
		delete from tb_comment where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
	<!-- 	逻辑删除 -->
	<update id="logicDel">
		update tb_comment set is_del = 't' where id = #{value}
	</update>
	
	<!-- 	批量逻辑删除 -->
	<update id="logicDelBatch">
		update  tb_comment
		set is_del = 't'
		where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

	<select id="queryPortrait" resultType="String">
		select tm.portrait from tb_comment tc
		LEFT JOIN tb_member tm
		on tm.openid = tc.openid
		where 1 = 1
		and tc.`information_id` = #{informationId}
		group by tc.ctime desc limit 0,4
	</select>
</mapper>